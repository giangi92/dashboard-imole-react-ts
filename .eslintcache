[{"/home/gianluca/typescript/imole/imole-dashboard/src/reportWebVitals.ts":"1","/home/gianluca/typescript/imole/imole-dashboard/src/components/sidebar.tsx":"2","/home/gianluca/typescript/imole/imole-dashboard/src/index.tsx":"3","/home/gianluca/typescript/imole/imole-dashboard/src/App.tsx":"4","/home/gianluca/typescript/imole/imole-dashboard/src/routes.tsx":"5","/home/gianluca/typescript/imole/imole-dashboard/src/components/navbar.tsx":"6","/home/gianluca/typescript/imole/imole-dashboard/src/layout/users.jsx":"7","/home/gianluca/typescript/imole/imole-dashboard/src/layout/vendors.jsx":"8","/home/gianluca/typescript/imole/imole-dashboard/src/layout/home.jsx":"9","/home/gianluca/typescript/imole/imole-dashboard/src/components/usericon.tsx":"10","/home/gianluca/typescript/imole/imole-dashboard/src/components/bottombar.tsx":"11","/home/gianluca/typescript/imole/imole-dashboard/src/components/content.tsx":"12","/home/gianluca/typescript/imole/imole-dashboard/src/components/pro-sidebar.tsx":"13"},{"size":425,"mtime":1608286214916,"results":"14","hashOfConfig":"15"},{"size":1906,"mtime":1608633649480,"results":"16","hashOfConfig":"15"},{"size":500,"mtime":1608286214910,"results":"17","hashOfConfig":"15"},{"size":1526,"mtime":1609326187891,"results":"18","hashOfConfig":"15"},{"size":355,"mtime":1609145323199,"results":"19","hashOfConfig":"15"},{"size":287,"mtime":1608566162029,"results":"20","hashOfConfig":"15"},{"size":1888,"mtime":1609345214410,"results":"21","hashOfConfig":"15"},{"size":223,"mtime":1608635481743,"results":"22","hashOfConfig":"15"},{"size":204,"mtime":1608635419492,"results":"23","hashOfConfig":"15"},{"size":205,"mtime":1608566261568,"results":"24","hashOfConfig":"15"},{"size":263,"mtime":1608635698026,"results":"25","hashOfConfig":"15"},{"size":617,"mtime":1609326144061,"results":"26","hashOfConfig":"15"},{"size":2265,"mtime":1609340807987,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"4sukvy",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"/home/gianluca/typescript/imole/imole-dashboard/src/reportWebVitals.ts",[],["59","60"],"/home/gianluca/typescript/imole/imole-dashboard/src/components/sidebar.tsx",[],["61","62"],"/home/gianluca/typescript/imole/imole-dashboard/src/index.tsx",[],"/home/gianluca/typescript/imole/imole-dashboard/src/App.tsx",["63"],"import React, { useState } from 'react';\n\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Routes from './routes';\nimport Sidebar from './components/sidebar';\nimport Navbar from './components/navbar';\nimport BottomBar from './components/bottombar';\nimport MyProSidebar from './components/pro-sidebar';\n\nfunction App() {\n  const [ shrinkPage, setShrink ] = useState(false);\n  const [toggled, setToggled] = useState(false);\n\n  const handleToggleSidebar = (value: boolean) => {\n    setToggled(value);\n  };\n\n  return (\n    <div>\n      <div>\n        <Router>\n          <Navbar></Navbar>\n          {/* <Sidebar shrinkMenu={shrinkPage} setShrinkMenu={setShrink}></Sidebar> */}\n          <MyProSidebar shrinkMenu={shrinkPage} setShrinkMenu={setShrink} toggled={toggled} handleToggleSidebar={handleToggleSidebar} />\n          <div>\n            <Switch>\n              {Routes.map((route, index) => (\n                // Render more <Route>s with the same paths as\n                // above, but different components this time.\n                <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  children={ <route.component shrinkPage={shrinkPage} handleToggleSidebar={handleToggleSidebar} /> }\n                />\n              ))}\n            </Switch>\n          </div>\n        </Router>\n      </div>\n      \n      <BottomBar shrinkPage={shrinkPage}></BottomBar>\n    </div>\n  );\n}\n\nexport default App;\n","/home/gianluca/typescript/imole/imole-dashboard/src/routes.tsx",[],"/home/gianluca/typescript/imole/imole-dashboard/src/components/navbar.tsx",[],"/home/gianluca/typescript/imole/imole-dashboard/src/layout/users.jsx",[],"/home/gianluca/typescript/imole/imole-dashboard/src/layout/vendors.jsx",[],["64","65"],"/home/gianluca/typescript/imole/imole-dashboard/src/layout/home.jsx",[],"/home/gianluca/typescript/imole/imole-dashboard/src/components/usericon.tsx",[],"/home/gianluca/typescript/imole/imole-dashboard/src/components/bottombar.tsx",[],"/home/gianluca/typescript/imole/imole-dashboard/src/components/content.tsx",[],"/home/gianluca/typescript/imole/imole-dashboard/src/components/pro-sidebar.tsx",["66","67"],"import { faGem, faHeart, faUser, faRegistered, faArrowRight, faArrowLeft, faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { ProSidebar, Menu, MenuItem, SubMenu, SidebarFooter, SidebarContent, SidebarHeader } from 'react-pro-sidebar';\nimport 'react-pro-sidebar/dist/css/styles.css';\nimport { Link } from 'react-router-dom';\n\nconst MyProSidebar = (props: any) => {\n    let shrinkSidebar = '';\n    let shrinkMenu = props.shrinkMenu;\n    const setShrinkMenu = props.setShrinkMenu;\n\n    shrinkSidebar = shrinkMenu ? 'collapsed' : '';\n\n    return (\n        <div className='sidebar'>\n            <ProSidebar collapsed={shrinkMenu} breakPoint=\"md\" toggled={props.toggled} onToggle={props.handleToggleSidebar}>\n                <SidebarHeader>\n                    <h1>Mitico Imole</h1>\n                </SidebarHeader>\n                <SidebarContent>\n                    <Menu iconShape=\"square\">\n                        <MenuItem icon={<FontAwesomeIcon icon={faGem} />} >\n                            Home\n                            <Link to=\"/home\" />\n                        </MenuItem>\n                        <SubMenu title=\"Components\" icon={<FontAwesomeIcon icon={faHeart} />}>\n                            <MenuItem>Component 1</MenuItem>\n                            <MenuItem>Component 2</MenuItem>\n                        </SubMenu>\n                        <MenuItem icon={<FontAwesomeIcon icon={faUser} />}>Utenti <Link to=\"/users\" /></MenuItem>\n                        <MenuItem icon={<FontAwesomeIcon icon={faRegistered} />}>Prenotazioni <Link to=\"/vendors\" /></MenuItem>\n                    </Menu>\n                </SidebarContent>\n                <SidebarFooter>\n                    <button className='end-sidebar' onClick={() => setShrinkMenu(!shrinkMenu)}>\n                        <div>\n                            <h3>\n                                {shrinkMenu ? <FontAwesomeIcon icon={faArrowRight} /> : <FontAwesomeIcon icon={faArrowLeft} />}\n                            </h3>\n                        </div>\n                    </button>\n                </SidebarFooter>\n            </ProSidebar>\n        </div>\n    )\n}\n\nexport default MyProSidebar;",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"68","replacedBy":"72"},{"ruleId":"70","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":10,"column":8,"nodeType":"76","messageId":"77","endLine":10,"endColumn":15},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"74","severity":1,"message":"78","line":1,"column":75,"nodeType":"76","messageId":"77","endLine":1,"endColumn":81},{"ruleId":"74","severity":1,"message":"79","line":13,"column":5,"nodeType":"76","messageId":"77","endLine":13,"endColumn":18},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],["80"],["81"],"@typescript-eslint/no-unused-vars","'Sidebar' is defined but never used.","Identifier","unusedVar","'faBars' is defined but never used.","'shrinkSidebar' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]